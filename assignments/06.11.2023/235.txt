class Solution {
    public:
    TreeNode* solve(TreeNode* root, TreeNode* p, TreeNode* q){
        //base case
        if(root == NULL){
            return NULL;
        }

        if((root -> val >= p->val && root -> val <= q->val) ||
        (root -> val <= p->val && root -> val >= q->val)){
            return root;
        }

        else if(root -> val > p->val && root -> val > q->val){
            TreeNode* leftans = solve(root -> left, p,q);
            return leftans;
        }
        else{
            return solve(root -> right, p, q);
        }
    }
public:
    TreeNode* lowestCommonAncestor(TreeNode* root, TreeNode* p, TreeNode* q) {
        if(root == NULL){
            return NULL;
        }

        return solve(root, p, q);
    }
};