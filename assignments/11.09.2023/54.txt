class Solution {
public:
    vector<int> spiralOrder(vector<vector<int>>& matrix) {
        int row = matrix.size();
        int col = matrix[0].size();

        int startrow = 0;
        int startcol = 0;
        int endrow = row - 1;
        int endcol = col - 1;
        int total = row * col;
        vector<int>nums;
        while(startrow <= endrow && startcol <= endcol){
            //printing the first row
            for(int i = startcol; i <= endcol; i++){
                nums.push_back(matrix[startrow][i]);
            }
            startrow++;
            
            //printing the last col
            for(int i = startrow; i <= endrow; i++){
                nums.push_back(matrix[i][endcol]);
            }
            endcol--;

            //printing the last row
            if(startrow <= endrow){
                for(int i = endcol; i >= startcol; i--){
                    nums.push_back(matrix[endrow][i]);
                }
                endrow--;
            }

            //printing the first col
            if(startcol <= endcol){
                for(int i = endrow; i >= startrow ; i--){
                    nums.push_back(matrix[i][startcol]);
                }
                startcol++;
            }
        }
        return nums;
    }
};