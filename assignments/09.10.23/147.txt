lass Solution {
    public:
    void insertionSort(vector<int>& nums){
        for(int i = 1; i < nums.size(); i++){
            int temp = nums[i];
            int j = i - 1;
            for(; j >= 0; j--){
                if(temp < nums[j]){
                    nums[j+1] = nums[j];
                }
                else{
                    break;
                }
            }
            nums[j+1] = temp;
        }
    }
public:
    ListNode* insertionSortList(ListNode* head) {
        if(head == NULL || head -> next == NULL){
            return head;
        }
        vector<int>nums;

        while(head != NULL){
            nums.push_back(head -> val);
            head = head -> next;
        }

        insertionSort(nums);

        ListNode* dummyhead = new ListNode(-1);
        ListNode* curr = dummyhead;
        

        for(int i = 0; i < nums.size(); i++){
            int val = nums[i];
            ListNode* temp = new ListNode(val);
            curr -> next = temp;
            curr = curr -> next;
        }

        return dummyhead -> next;
    }
};